#!/bin/sh

# scrippies/configure-apt

set -eu

readonly this="$(readlink -f "$0")"
readonly here="$(dirname "${this}")"
readonly whatami="$(basename "${this}")"
readonly tmpdir="$(mktemp -dt "${whatami}.XXXXXX")"

log() { echo "${whatami}[$$]: $@" >&2; }
error() { log "ERROR: $@"; }
warning() { log "WARNING: $@"; }
info() { log "INFO: $@"; }

die() {
    error "$@"
    usage >&2
    exit 1
}

cleanup() {
    status="$?"
    rm -rf "${tmpdir}"
    return "${status}"
}

usage() {
    cat <<EOF
Usage: $0 [OPTION]... [DISTRIBUTION]
Configure apt to use additional repositories.

Notes:

    * If not given, DISTRIBUTION discovery is attempted via $(lsb_release -sc)
      or, failing that, $(/etc/os-release) definition for $(UBUNTU_CODENAME).

Options:

    -h            print usage and exit
    -f NETWORK    force NETWORK={private,public} (default is to discover)

Examples:

    \$ $0

    \$ $0 -f private

    \$ $0 -f public

    \$ $0 trusty

    \$ $0 xenial

    \$ $0 bionic

EOF
}

# 3.282 Portable Filename Character Set
# https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_282
filenamify() {
    printf "$@" | tr -sc '[:alnum:]._-' '_'
}

apt_config_path() {
    cut -d= -f2 | xargs -n1 | paste -sd/ | xargs readlink -f
}

etc_apt_sources_list() {
    apt-config shell _ Dir _ Dir::Etc _ Dir::Etc::sourcelist | apt_config_path
}

etc_apt_sources_list_d() {
    apt-config shell _ Dir _ Dir::Etc _ Dir::Etc::sourceparts | apt_config_path
}

etc_apt_apt_conf_d() {
    apt-config shell _ Dir _ Dir::Etc _ Dir::Etc::parts | apt_config_path
}

etc_apt_preferences_d() {
    apt-config shell _ Dir _ Dir::Etc _ Dir::Etc::preferencesparts | apt_config_path
}

# read stdin (assumed to be apt sources list file body) into the given apt
# sources list file
#
# $1 : listfile to be written
read_into_listfile() {
    info "installing: $1"
    if [ -f "$1" ]; then
        warning "file exists: $1"
        warning "$(mv -v $1 $1.save)"
    fi
    cat >"$1" <<EOF
# $1
#
# This is a generated apt sources list file.
#
# https://wiki.debian.org/SourcesList
#
# generator : ${this}
# user      : $(id)
# uname     : $(uname -a)
# date      : $(date -u +"%Y-%m-%dT%H:%M:%SZ")

EOF
    cat >>"$1"
}

# read stdin (assumed to be apt sources list file body) into a generated apt
# sources list file named for the given url
#
# $1 : url from which to generate apt sources list file name
read_into_generated() {
    read_into_listfile "$(etc_apt_sources_list_d)/$(filenamify "$1").list"
}

detect_distribution() {
    if command -v lsb_release >/dev/null 2>&1; then
        lsb_release --short --codename
        return 0
    else
        warning "missing program: lsb_release"
    fi
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        if [ -n "${UBUNTU_CODENAME:-}" ]; then
            echo "${UBUNTU_CODENAME}"
            return 0
        else
            warning "/etc/os-release: undefined UBUNTU_CODENAME"
        fi
    else
        warning "missing file: /etc/os-release"
    fi
    return 1
}

vet_force_network() {
    case "$1" in
        private)
            echo "$1"
            return 0
            ;;
        public)
            echo "$1"
            return 0
            ;;
        *) break ;;
    esac
    error "bad force_network: $1"
    return 1
}

# Take some things that describe an apt repository. Write a generated apt
# sources list file that enables the referenced repository.
#
# $1 : repo_uri  ; https://wiki.debian.org/SourcesList#Repository_URL
# $2 : atyp_list ; https://wiki.debian.org/SourcesList#Archive_type
# $3 : dist_list ; https://wiki.debian.org/SourcesList#Distribution
# $4 : comp_list ; https://wiki.debian.org/SourcesList#Component
setup_apt_list() {
    local repo_uri="$1"
    local atyp_list="$2"
    local dist_list="$3"
    local comp_list="$4"
    # list file is named for the uri it enables
    local apt_list_file="$(etc_apt_sources_list_d)/$(filenamify "${repo_uri}").list"
    info "installing: ${apt_list_file}"
    if [ -f "${apt_list_file}" ]; then
        warning "file exists: ${apt_list_file}"
        warning "$(mv -v ${apt_list_file} ${apt_list_file}.save)"
    fi
    # write header
    cat >"${apt_list_file}" <<EOF
# ${apt_list_file}
#
# This is a generated apt sources list file.
#
# https://wiki.debian.org/SourcesList
#
# generator : ${this}
# user      : $(id)
# uname     : $(uname -a)
# date      : $(date -u +"%Y-%m-%dT%H:%M:%SZ")

EOF
    # write body
    # Make sure atyp and dist are padded to the longest member
    local atyp_width="$(wc -L <"${atyp_list}")"
    local dist_width="$(wc -L <"${dist_list}")"
    while read atyp; do
        while read dist; do
            printf "%-${atyp_width}s %s %-${dist_width}s %s\n" \
                "${atyp}" \
                "${repo_uri}" \
                "${dist}" \
                "$(paste -sd' ' <"${comp_list}")"
        done <"${dist_list}"
    done <"${atyp_list}" >>"${apt_list_file}"
}

################################################################################

trap cleanup EXIT
export TMPDIR="${tmpdir}"
export LC_ALL=C

while getopts ":hf:" opt; do
    case "${opt}" in
        h)
            usage
            exit 0
            ;;
        f)
            if ! force_network="$(vet_force_network "${OPTARG}")"; then
                die "FAILURE: vet_force_network ${OPTARG}"
            fi
            readonly force_network="${force_network}"
            readonly use_network="${force_network}"
            ;;
        :) die "missing argument: -${OPTARG}" ;;
        \?) die "bad option: -${OPTARG}" ;;
    esac
done
shift "$((${OPTIND} - 1))"

case "$#" in
    0)
        warning "missing distribution; will attempt to discover"
        if ! distribution="$(detect_distribution)"; then
            die "FAILURE: detect_distribution"
        fi
        readonly distribution="${distribution}"
        info "detected distribution: ${distribution}"
        ;;
    1)
        readonly distribution="$1"
        ;;
    *)
        die "bad args"
        ;;
esac

if [ -n "${use_network:-}" ]; then
    info "use_network: ${use_network}"
else
    # https://serverfault.com/questions/13780/how-can-i-determine-if-a-machine-is-online-without-using-ping/923193#923193
    # https://unix.stackexchange.com/questions/148985/how-to-get-a-response-from-any-url/148989#148989
    if getent hosts apt.realtime.cxm >/dev/null 2>&1; then
        readonly use_network="private"
    else
        readonly use_network="public"
    fi
    warning "discovered use_network: ${use_network}"
fi

###########################
# REALTIME-ROBOTICS BEGIN #
###########################
info "installing realtime robotics pubkey: 0xd232bf1c54e0f4b1f1d115920c2e51a6a3490b91"
apt-key add --verbose - <<'EOF'
-----BEGIN PGP PUBLIC KEY BLOCK-----

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
nZWf
=YX62
-----END PGP PUBLIC KEY BLOCK-----
EOF
if [ "private" = "${use_network:-public}" ]; then
    readonly realtime_robotics_repo_uri="http://apt.realtime.cxm/apt/realtime-robotics/${distribution}"
else
    # THERE IS NO PUBLIC REPOSITORY
    readonly realtime_robotics_repo_uri=""
fi
readonly realtime_robotics_atyp_list="$(mktemp -t realtime_robotics_atyp_list.XXXXXX)"
cat >"${realtime_robotics_atyp_list}" <<'EOF'
deb
deb-src
EOF
readonly realtime_robotics_dist_list="$(mktemp -t realtime_robotics_dist_list.XXXXXX)"
cat >"${realtime_robotics_dist_list}" <<EOF
${distribution}
EOF
readonly realtime_robotics_comp_list="$(mktemp -t realtime_robotics_comp_list.XXXXXX)"
cat >"${realtime_robotics_comp_list}" <<'EOF'
realtime-robotics
EOF
if [ -n "${realtime_robotics_repo_uri:-}" ]; then
    setup_apt_list \
        "${realtime_robotics_repo_uri}" \
        "${realtime_robotics_atyp_list}" \
        "${realtime_robotics_dist_list}" \
        "${realtime_robotics_comp_list}"
else
    warning "skipping realtime-robotics repository"
fi
#########################
# REALTIME-ROBOTICS END #
#########################

#################
# FREECAD BEGIN #
#################
info "installing freecad pubkey: 0x83193aa3b52ff6fcf10a1bbf005eae8119bb5bca"
apt-key add --verbose - <<'EOF'
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1

mI0ETYF+BAEEAK1n4CPNzdG/rTNvteUkHOiSikl07GJl7jh8RjL4T2BA3g2J0M0g
x20gOfc2Srbmg676cdf2kIzhfVPbjvWJnDYsFS1BOa0ZsKb0xN6lZzMU2lhmPMgF
jJJk94BqeLlxr9wSqmOkR8X3yDtNWbZ+5xO1wDUP4GDZcCwesVsWfdXZABEBAAG0
JUxhdW5jaHBhZCBQUEEgZm9yIEZyZWVDQUQgbWFpbnRhaW5lcnOIuAQTAQIAIgUC
TYF+BAIbAwYLCQgHAwIGFQgCCQoLBBYCAwECHgECF4AACgkQAF6ugRm7W8oktwP+
Nzk9OEg3kl8fNd9JeTWrw2UnisfPOIV7HTATpLqnXZQOQ+Q7QjsRL6yRMj+U6OWa
9pgDrljJyg77DFCcHipCrR5LiXdxzzK2Z2wbStxsS2U3v7HJaXw4gmYAGyahswLa
RzbmV95JXeFAGjXM5yH6FTxbzGdH/IaXN1ASMMZQedU=
=3tnf
-----END PGP PUBLIC KEY BLOCK-----
EOF
if [ "private" = "${use_network:-public}" ]; then
    readonly freecad_repo_uri="http://apt.realtime.cxm/apt/freecad/${distribution}"
else
    # DON'T USE THE PUBLIC REPOSITORY
    readonly freecad_repo_uri=""
    # readonly freecad_repo_uri="http://ppa.launchpad.net/freecad-maintainers/occt-releases/ubuntu"
fi
readonly freecad_atyp_list="$(mktemp -t freecad_atyp_list.XXXXXX)"
cat >"${freecad_atyp_list}" <<'EOF'
deb
deb-src
EOF
readonly freecad_dist_list="$(mktemp -t freecad_dist_list.XXXXXX)"
cat >"${freecad_dist_list}" <<EOF
${distribution}
EOF
readonly freecad_comp_list="$(mktemp -t freecad_comp_list.XXXXXX)"
cat >"${freecad_comp_list}" <<'EOF'
main
EOF
if [ -n "${freecad_repo_uri:-}" ]; then
    setup_apt_list \
        "${freecad_repo_uri}" \
        "${freecad_atyp_list}" \
        "${freecad_dist_list}" \
        "${freecad_comp_list}"
else
    warning "skipping freecad repository"
fi
###############
# FREECAD END #
###############

##############
# NODE BEGIN #
##############
info "installing node pubkey: 0x9fd3b784bc1c6fc31a8a0a1c1655a0ab68576280"
apt-key add --verbose - <<'EOF'
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1
Comment: GPGTools - https://gpgtools.org

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
=CLGF
-----END PGP PUBLIC KEY BLOCK-----
EOF
if [ "private" = "${use_network:-public}" ]; then
    readonly node_repo_uri="http://apt.realtime.cxm/apt/node_10.x/${distribution}"
else
    readonly node_repo_uri="http://deb.nodesource.com/node_10.x"
fi
readonly node_atyp_list="$(mktemp -t node_atyp_list.XXXXXX)"
cat >"${node_atyp_list}" <<'EOF'
deb
deb-src
EOF
readonly node_dist_list="$(mktemp -t node_dist_list.XXXXXX)"
cat >"${node_dist_list}" <<EOF
${distribution}
EOF
readonly node_comp_list="$(mktemp -t node_comp_list.XXXXXX)"
cat >"${node_comp_list}" <<'EOF'
main
EOF
setup_apt_list \
    "${node_repo_uri}" \
    "${node_atyp_list}" \
    "${node_dist_list}" \
    "${node_comp_list}"
############
# NODE END #
############

#############
# ROS BEGIN #
#############
info "installing ROS pubkey: 0xc1cf6e31e6bade8868b172b4f42ed6fbab17c654"
apt-key add --verbose - <<'EOF'
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1

mQINBFzvJpYBEADY8l1YvO7iYW5gUESyzsTGnMvVUmlV3XarBaJz9bGRmgPXh7jc
VFrQhE0L/HV7LOfoLI9H2GWYyHBqN5ERBlcA8XxG3ZvX7t9nAZPQT2Xxe3GT3tro
u5oCR+SyHN9xPnUwDuqUSvJ2eqMYb9B/Hph3OmtjG30jSNq9kOF5bBTk1hOTGPH4
K/AY0jzT6OpHfXU6ytlFsI47ZKsnTUhipGsKucQ1CXlyirndZ3V3k70YaooZ55rG
aIoAWlx2H0J7sAHmqS29N9jV9mo135d+d+TdLBXI0PXtiHzE9IPaX+ctdSUrPnp+
TwR99lxglpIG6hLuvOMAaxiqFBB/Jf3XJ8OBakfS6nHrWH2WqQxRbiITl0irkQoz
pwNEF2Bv0+Jvs1UFEdVGz5a8xexQHst/RmKrtHLct3iOCvBNqoAQRbvWvBhPjO/p
V5cYeUljZ5wpHyFkaEViClaVWqa6PIsyLqmyjsruPCWlURLsQoQxABcL8bwxX7UT
hM6CtH6tGlYZ85RIzRifIm2oudzV5l+8oRgFr9yVcwyOFT6JCioqkwldW52P1pk/
/SnuexC6LYqqDuHUs5NnokzzpfS6QaWfTY5P5tz4KHJfsjDIktly3mKVfY0fSPVV
okdGpcUzvz2hq1fqjxB6MlB/1vtk0bImfcsoxBmF7H+4E9ZN1sX/tSb0KQARAQAB
tCZPcGVuIFJvYm90aWNzIDxpbmZvQG9zcmZvdW5kYXRpb24ub3JnPokCVAQTAQoA
PhYhBMHPbjHmut6IaLFytPQu1vurF8ZUBQJc7yaWAhsDBQkDwmcABQsJCAcCBhUK
CQgLAgQWAgMBAh4BAheAAAoJEPQu1vurF8ZUkhIP/RbZY1ErvCEUy8iLJm9aSpLQ
nDZl5xILOxyZlzpg+Ml5bb0EkQDr92foCgcvLeANKARNCaGLyNIWkuyDovPV0xZJ
rEy0kgBrDNb3++NmdI/+GA92pkedMXXioQvqdsxUagXAIB/sNGByJEhs37F05AnF
vZbjUhceq3xTlvAMcrBWrgB4NwBivZY6IgLvl/CRQpVYwANShIQdbvHvZSxRonWh
NXr6v/Wcf8rsp7g2VqJ2N2AcWT84aa9BLQ3Oe/SgrNx4QEhA1y7rc3oaqPVu5ZXO
K+4O14JrpbEZ3Xs9YEjrcOuEDEpYktA8qqUDTdFyZrxb9S6BquUKrA6jZgT913kj
J4e7YAZobC4rH0w4u0PrqDgYOkXA9Mo7L601/7ZaDJob80UcK+Z12ZSw73IgBix6
DiJVfXuWkk5PM2zsFn6UOQXUNlZlDAOj5NC01V0fJ8P0v6GO9YOSSQx0j5UtkUbR
fp/4W7uCPFvwAatWEHJhlM3sQNiMNStJFegr56xQu1a/cbJH7GdbseMhG/f0BaKQ
qXCI3ffB5y5AOLc9Hw7PYiTFQsuY1ePRhE+J9mejgWRZxkjAH/FlAubqXkDgterC
h+sLkzGf+my2IbsMCuc+3aeNMJ5Ej/vlXefCH/MpPWAHCqpQhe2DET/jRSaM53US
AHNx8kw4MPUkxExgI7Sd
=4Ofr
-----END PGP PUBLIC KEY BLOCK-----
EOF
if [ "private" = "${use_network:-public}" ]; then
    readonly ros_repo_uri="http://apt.realtime.cxm/apt/ros/${distribution}"
else
    readonly ros_repo_uri="http://packages.ros.org/ros/ubuntu"
fi
readonly ros_atyp_list="$(mktemp -t ros_atyp_list.XXXXXX)"
cat >"${ros_atyp_list}" <<'EOF'
deb
deb-src
EOF
readonly ros_dist_list="$(mktemp -t ros_dist_list.XXXXXX)"
cat >"${ros_dist_list}" <<EOF
${distribution}
EOF
readonly ros_comp_list="$(mktemp -t ros_comp_list.XXXXXX)"
cat >"${ros_comp_list}" <<'EOF'
main
EOF
setup_apt_list \
    "${ros_repo_uri}" \
    "${ros_atyp_list}" \
    "${ros_dist_list}" \
    "${ros_comp_list}"
###########
# ROS END #
###########

################
# UBUNTU BEGIN #
################
info "installing ubuntu pubkey(s)"
apt-key add --verbose - <<'EOF'
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1

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
=/3oq
-----END PGP PUBLIC KEY BLOCK-----
EOF
if [ "private" = "${use_network:-public}" ]; then
    readonly ubuntu_repo_uri="http://apt.realtime.cxm/apt/ubuntu/${distribution}"
else
    readonly ubuntu_repo_uri="http://archive.ubuntu.com/ubuntu"
fi
readonly ubuntu_atyp_list="$(mktemp -t ubuntu_atyp_list.XXXXXX)"
cat >"${ubuntu_atyp_list}" <<'EOF'
deb
deb-src
EOF
readonly ubuntu_dist_list="$(mktemp -t ubuntu_dist_list.XXXXXX)"
cat >"${ubuntu_dist_list}" <<EOF
${distribution}
${distribution}-backports
${distribution}-security
${distribution}-updates
EOF
readonly ubuntu_comp_list="$(mktemp -t ubuntu_comp_list.XXXXXX)"
cat >"${ubuntu_comp_list}" <<'EOF'
main
restricted
universe
multiverse
EOF
setup_apt_list \
    "${ubuntu_repo_uri}" \
    "${ubuntu_atyp_list}" \
    "${ubuntu_dist_list}" \
    "${ubuntu_comp_list}"

##############
# UBUNTU END #
##############

# proactive protection against a bad proxy
#
# * https://askubuntu.com/questions/679233/failed-to-fetch-hash-sum-mismatch-tried-rm-apt-list-but-didnt-work
# * https://serverfault.com/questions/722893/debian-mirror-hash-sum-mismatch
# * https://gist.github.com/trastle/5722089
info "install $(etc_apt_apt_conf_d)/99fixbadproxy"
cat >"$(etc_apt_apt_conf_d)/99fixbadproxy" <<'FIXBADPROXY'
Acquire::http::Pipeline-Depth "0";
Acquire::http::No-Cache=True;
Acquire::BrokenProxy=true;
FIXBADPROXY

exit "$?"
