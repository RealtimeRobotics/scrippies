#!/bin/sh

# scrippies/mount-sshfs

set -eu

readonly this="$(readlink -f "$0")"
readonly whatami="$(basename "${this}")"
readonly tmpdir="$(mktemp -dt "${whatami}.XXXXXX")"

log() { echo "${whatami}[$$]: $*" >&2; }
error() { log "ERROR: $*"; }
warning() { log "WARNING: $*"; }
info() { log "INFO: $*"; }

die() {
    error "$*"
    usage >&2
    exit 1
}

cleanup() {
    status="$?"
    rm -rf "${tmpdir}" || true
    return "${status}"
}

usage() {
    cat <<EOF

Usage: $0 [OPTION]... [USER@]HOST
Mount via sshfs [USER@]HOST to \$HOME/mnt/[USER@]HOST.

Options:

    -h    print this usage and return success
    -u    unmount

Examples:

    \$ $0 -h

    \$ $0 luser@host42.example.com

    \$ $0 -u luser@host42.example.com

EOF
}

################################################################################

trap cleanup EXIT
export TMPDIR="${tmpdir}"
export LC_ALL=C

if ! command -v fusermount >/dev/null 2>&1; then
    die "missing program: fusermount"
fi

if ! command -v sshfs >/dev/null 2>&1; then
    die "missing program: sshfs"
fi

while getopts ":hu" opt; do
    case "${opt}" in
        h)
            usage
            exit "$?"
            ;;
        u) requested_unmount="true" ;;
        :) die "Missing argument: -${OPTARG}" ;;
        \?) die "Invalid option: -${OPTARG}" ;;
    esac
done
shift "$((OPTIND - 1))"

if ! [ 1 -eq "$#" ]; then
    die "bad args"
fi

# https://stackoverflow.com/questions/106179/regular-expression-to-match-dns-hostname-or-ip-address
if ! echo "$1" | grep -Eq '([a-z_][a-z0-9_-]*[$]?[@])?[a-z0-9]([a-z0-9-]*[a-z0-9])*([.][a-z0-9]([a-z0-9-]*[a-z0-9])*)*$'; then
    die "bad argument: $1"
fi

readonly mount_point="${HOME}/mnt/$1"

if [ "true" = "${requested_unmount:-false}" ]; then
    sync
    fusermount -u "${mount_point}" >&2
    exit "$?"
fi

if ! [ -d "${mount_point}" ]; then
    warning "missing directory: ${mount_point}"
    info "$(mkdir -vp "${mount_point}")"
fi

sshfs -o sshfs_debug,reconnect,workaround=all "$1:/" "${mount_point}" >&2
mount -l | grep "${mount_point}" >&2

exit "$?"
