#!/bin/sh

# scrippies/configure-rosdep

set -eu

readonly this="$(readlink -f "$0")"
readonly here="$(dirname "${this}")"
readonly whatami="$(basename "${this}")"
readonly tmpdir="$(mktemp -dt "${whatami}.XXXXXX")"

log() { echo "${whatami}[$$]: $@" >&2; }
error() { log "ERROR: $@"; }
warning() { log "WARNING: $@"; }
info() { log "INFO: $@"; }

die() {
    error "$@"
    usage >&2
    exit 1
}

cleanup() {
    status="$?"
    rm -rf "${tmpdir}"
    return "${status}"
}

usage() {
    cat <<EOF
Usage: $0 [OPTION]... PACKAGES_URL
Trick rosdep into using additional apt packages.

Options:

    -h                 print usage and exit

Examples:

    \$ $0
EOF
}

# 3.282 Portable Filename Character Set
# https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_282
filenamify() {
    printf "$@" | tr -sc '[:alnum:]._-' '_'
}

################################################################################

trap cleanup EXIT
export TMPDIR="${tmpdir}"
export LC_ALL=C

if ! [ 0 -eq "$(id -u)" ]; then
    sudo "${this}" $@
    exit "$?"
fi

# while getopts ":hA:D:" opt; do
while getopts ":h" opt; do
    case "${opt}" in
        h)
            usage
            exit 0
            ;;
        # A) readonly architecture="${OPTARG}" ;;
        # D) readonly distribution="${OPTARG}" ;;
        :) die "missing argument: -${OPTARG}" ;;
        \?) die "bad option: -${OPTARG}" ;;
    esac
done
shift "$((${OPTIND} - 1))"

if ! [ 1 -eq "$#" ]; then
    die "bad args"
fi

# TODO: take (or discover) InRelease URL, OS distribution, architecture;
# discover/download the relevant Packages file(s), check hashes thereon,
# uncompress, etc...
#
# https://wiki.debian.org/DebianRepository/Format

# if ! [ -n "${architecture:-}" ]; then
#     warning "unspecified architecture"
#     if ! command -v uname >/dev/null 2>&1; then
#         die "missing program: uname"
#     fi
#     readonly architecture="$(uname -m)"
#     warning "detected architecture: ${architecture}"
# fi

# if ! [ -n "${distribution:-}" ]; then
#     warning "unspecified distribution"
#     if ! command -v lsb_release >/dev/null 2>&1; then
#         die "missing program: lsb_release"
#     fi
#     readonly distribution="$(lsb_release -sc)"
#     warning "detected distribution: ${distribution}"
# fi

readonly packages_url="$1"
readonly packages="${tmpdir}/$(filenamify "${packages_url}")"
readonly pkgname_list="${packages}.list"
curl -fsSLo "${packages}" "${packages_url}"
sed -nr 's|^Package:[[:space:]]+([[:graph:]]+).*$|\1|gp' <"${packages}" >"${pkgname_list}"
sort -uo "${pkgname_list}" "${pkgname_list}"

# Generate a "rosdep yaml" file that declares an eponymous ROS package package
# for each apt package listed in the Packages file.
readonly rosdep_yaml="/var/lib/rosdep/$(basename "${packages}").yaml"
info "generating ${rosdep_yaml}"
mkdir -vp "$(dirname "${rosdep_yaml}")"
cat >"${rosdep_yaml}" <<EOF
# ${rosdep_yaml}
#
# This is a generated rosdep yaml file.
#
# https://docs.ros.org/independent/api/rosdep/html/rosdep_yaml_format.html
#
# generator : ${this}
# user      : $(id)
# uname     : $(uname -a)
# date      : $(date -u +"%Y-%m-%dT%H:%M:%SZ")

EOF

# bloom v0.8.0 started vetting package names for every supported OS; we need to
# tell bigger lies
#
# * https://github.com/ros-infrastructure/bloom/releases/tag/0.8.0
# * https://github.com/ros-infrastructure/bloom/commit/c247a1320172867ce87c94939df1f166d25a0bb0#diff-de0a9b67ffe2874a076b5fdb15bad484
# * https://docs.ros.org/independent/api/rosdep/html/rosdep_yaml_format.html#os-name-identifiers-and-supported-package-managers
readonly osname_list="$(mktemp -t osname_list.XXXXXX)"
cat >"${osname_list}" <<EOF
arch
cygwin
debian
fedora
freebsd
gentoo
opensuse
osx
rhel
ubuntu
EOF

while read pkgname; do
    cat >>"${rosdep_yaml}" <<EOF
${pkgname}:
EOF
    while read osname; do
        cat >>"${rosdep_yaml}" <<EOF
  ${osname}: [${pkgname}]
EOF
    done <"${osname_list}"
done <"${pkgname_list}"

# Generate a "rosdep sources list" file that references the freshly-generated
# rosdep yaml.
readonly rosdep_sources_list="/etc/ros/rosdep/sources.list.d/$(basename "${packages}").list"
info "generating ${rosdep_sources_list}"
mkdir -vp "$(dirname "${rosdep_sources_list}")"
cat >"${rosdep_sources_list}" <<EOF
# ${rosdep_sources_list}
#
# This is a generated rosdep sources list file.
#
# https://docs.ros.org/independent/api/rosdep/html/sources_list.html
#
# generator : ${this}
# user      : $(id)
# uname     : $(uname -a)
# date      : $(date -u +"%Y-%m-%dT%H:%M:%SZ")

yaml file://${rosdep_yaml}
EOF
