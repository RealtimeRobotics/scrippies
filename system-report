#!/bin/sh

# scrippies/system-report

set -eu

readonly this="$(readlink -f "$0")"
readonly whatami="$(basename "${this}")"
readonly tmpdir="$(mktemp -dt "${whatami}.XXXXXX")"

log() { echo "${whatami}[$$]: $*" >&2; }
error() { log "ERROR: $*"; }
warning() { log "WARNING: $*"; }
info() { log "INFO: $*"; }

die() {
    error "$*"
    usage >&2
    exit 1
}

cleanup() {
    status="$?"
    rm -rf "${tmpdir}"
    return "${status}"
}

usage() {
    cat <<EOF

Usage: $0 [OPTION]...
Generate a system report about the current host.

Options:

    -h    print usage and exit

Examples:

    \$ $0

EOF
}

banner() {
    msg="# $* #"
    edge="$(echo "${msg}" | sed 's/./#/g')"
    printf '\n%s\n%s\n%s\n' "${edge}" "${msg}" "${edge}"
}

spit() {
    # shellcheck disable=SC2039
    local stdout=""
    stdout="$(mktemp -t stdout.XXXXXX)"
    # shellcheck disable=SC2039
    local stderr=""
    stderr="$(mktemp -t stderr.XXXXXX)"
    banner "$*"
    if (eval "$*" 1>"${stdout}" 2>"${stderr}"); then
        cat "${stdout}"
    else
        cat "${stderr}"
    fi
}

################################################################################

trap cleanup EXIT
export TMPDIR="${tmpdir}"
export LC_ALL=C

while getopts ":h" opt; do
    case "${opt}" in
        h)
            usage
            exit 0
            ;;
        :) die "missing argument: -${OPTARG}" ;;
        \?) die "bad option: -${OPTARG}" ;;
    esac
done
shift "$((OPTIND - 1))"

banner ' ++++ SYSTEM REPORT ++++ '
spit 'date -uIseconds'
spit 'env | sort'
spit 'uname -a'
spit 'ip addr'
spit 'dmidecode'
spit 'lshw'
spit 'hwinfo'
