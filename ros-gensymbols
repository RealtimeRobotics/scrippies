#!/bin/sh

# scrippies/ros-gensymbols

set -eu

this="$(readlink -f "$0")"
readonly this="${this}"
whatami="$(basename "${this}")"
readonly whatami="${whatami}"
tmpdir="$(mktemp -dt "${whatami}.XXXXXX")"
readonly tmpdir="${tmpdir}"

log() { echo "${whatami}[$$]: $*" >&2; }
error() { log "ERROR: $*"; }
warning() { log "WARNING: $*"; }
info() { log "INFO: $*"; }

die() {
    error "$@"
    usage >&2
    exit 1
}

cleanup() {
    status="$?"
    rm -rf "${tmpdir}" || true
    return "${status}"
}

usage() {
    cat <<EOF

Usage: $0 [OPTION]...
Generate a symbols file for every ROS unversioned shared object.

Options:

    -h               print usage and exit
    -R ROS_DISTRO    override ros_distro (detected by default)

Examples:

    \$ $0
 
    \$ $0 -R focal

EOF
}

# take nothing and detect the installed ros_distro; print ros_distro on
# success; print nothing on failure
detect_ros_distro() {
    find /opt/ros -maxdepth 1 -mindepth 1 -type d -exec basename -a {} + \
        | paste -sd, \
        | grep -Eox '[[:lower:]]{4,}'
}

################################################################################

trap cleanup EXIT
chmod 1777 "${tmpdir}"
export TMPDIR="${tmpdir}"
export LC_ALL=C

while getopts ":hR:" opt; do
    case "${opt}" in
        h)
            usage
            exit 0
            ;;
        R) readonly ros_distro="${OPTARG}" ;;
        :) die "missing argument: -${OPTARG}" ;;
        \?) die "bad option: -${OPTARG}" ;;
    esac
done
shift "$((OPTIND - 1))"

################################################################################

# ros_distro
if [ -n "${ros_distro:-}" ]; then
    info "ros_distro: ${ros_distro}"
elif ros_distro="$(detect_ros_distro)"; then
    readonly ros_distro="${ros_distro}"
    info "detected ros_distro: ${ros_distro}"
else
    die "failed to get and/or detect ros_distro"
fi

################################################################################

info "finding shared objects in /opt/ros/${ros_distro}/lib..."

sofile_list="$(mktemp -t sofile_list.XXXXXX)"
readonly sofile_list="${sofile_list}"
find \
    "/opt/ros/${ros_distro}/lib" \
    -maxdepth 1 \
    -type f \
    -exec sh -c 'objdump -p "$0" 2>/dev/null | grep -Fq SONAME' {} \; \
    -print \
    >"${sofile_list}"
sort -uo "${sofile_list}" "${sofile_list}"
info "found $(wc -l <"${sofile_list}") shared objects in /opt/ros/${ros_distro}/lib"

info "searching for package owners..."

dpkg_search="$(mktemp -t dpkg_search.XXXXXX)"
readonly dpkg_search="${dpkg_search}"
xargs dpkg -S <"${sofile_list}" >"${dpkg_search}"
sort -uo "${dpkg_search}" "${dpkg_search}"
package_sofile_list="$(mktemp -t package_sofile_list.XXXXXX)"
readonly package_sofile_list="${package_sofile_list}"

if false; then
    sed -r 's|^(.*): (.*)$|\2\t\1|g;s|, |\t|g' \
        <"${dpkg_search}" >"${package_sofile_list}"
else
    awk '{gsub("[,:] ","\t"); for(i=1;i<NF;++i) printf "%s\t%s\n", $i, $NF}' \
        <"${dpkg_search}" >"${package_sofile_list}"
fi
sort -uo "${package_sofile_list}" "${package_sofile_list}"

package_list="$(mktemp -t package_list.XXXXXX)"
readonly package_list="${package_list}"
cut -f1 <"${package_sofile_list}" >"${package_list}"
sort -uo "${package_list}" "${package_list}"

info "found $(wc -l <"${package_list}") package owners"

while read -r package; do
    # Change to a clean directory to prevent dpkg-gensymbols from using
    # `${PWD}/debian/*` to discover the package name and/or version.
    cd "$(mktemp -dt "${package}.XXXXXX")"

    # use the current version of the installed package
    if ! version="$(dpkg-query -Wf'${Version}' "${package}")"; then
        die "FAILURE: dpkg-query -Wf'\${Version}' ${package}"
    fi

    # https://www.debian.org/doc/debian-policy/ch-sharedlibs.html#the-symbols-system
    symbols="/etc/dpkg/symbols/${package}.symbols"
    mkdir -p "$(dirname "${symbols}")"
    rm -f "${symbols}"

    info "${package} ${version} ${symbols}"

    # https://manpages.debian.org/buster/dpkg-dev/dpkg-gensymbols.1.en.html
    #
    # get xargs to do invocations like this:
    #
    #     dpkg-gensymbols \
    #         -p"${package}" \
    #         -v"${version}" \
    #         -O"${symbols}" \
    #         -e/opt/ros/${ros_distro}/lib/libfoo.so \
    #         -e/opt/ros/${ros_distro}/lib/libbar.so \
    #         -e/opt/ros/${ros_distro}/lib/libqux.so
    #
    sed -nr "s,^${package}\t([[:graph:]]+)$,-e\1,gp" <"${package_sofile_list}" \
        | xargs dpkg-gensymbols -q -p"${package}" -v"${version}" -O"${symbols}" >/dev/null

done <"${package_list}"

info "done"

exit "$?"
