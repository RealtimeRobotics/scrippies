#!/bin/sh

# scrippies/freeze-rosdep

set -eu

readonly this="$(readlink -f "$0")"
readonly here="$(dirname "${this}")"
readonly whatami="$(basename "${this}")"
readonly tmpdir="$(mktemp -dt "${whatami}.XXXXXX")"

readonly default_destdir="/var/lib/rosdep"

log() { echo "${whatami}[$$]: $@" >&2; }
error() { log "ERROR: $@"; }
warning() { log "WARNING: $@"; }
info() { log "INFO: $@"; }

die() {
    error "$@"
    usage >&2
    exit 1
}

cleanup() {
    status="$?"
    rm -rf "${tmpdir}"
    return "${status}"
}

usage() {
    cat <<EOF
Usage: $0 [OPTION]... ROSDEP_LIST
Cache rosdistro yamls and force rosdep to use them.

Options:

    -h            print usage and exit
    -t DESTDIR    download files to DESTDIR (default: ${default_destdir})

Examples:

    \$ $0 /etc/ros/rosdep/sources.list.d/20-default.list

    \$ $0 -t /tmp /etc/ros/rosdep/sources.list.d/20-default.list

EOF
}

# 3.282 Portable Filename Character Set
# https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_282
filenamify() {
    printf "$@" | tr -sc '[:alnum:]._-' '_'
    # printf "$@" | base64 -w0
}

# $1 : http uri
# $2 : destination directory (default /var/lib/rosdep)
#
# Download given rosdep yaml http uri to (optionally given) destination
# directory. On success, print full path to downloaded file. On failure, print
# nothing.
dl_rosdep() {
    local http_uri="$1"
    local dest_dir="${2:-/var/lib/rosdep}"
    local output="${dest_dir}/$(filenamify "${http_uri}")"
    if ! curl --create-dirs -fsSLo "${output}" "${http_uri}"; then
        error "FAILURE: curl --create-dirs -fsSLo ${output} ${http_uri}"
        return 1
    fi
    echo "${output}"
    return 0
}

################################################################################

trap cleanup EXIT
export TMPDIR="${tmpdir}"
export LC_ALL=C

# while getopts ":hA:D:" opt; do
while getopts ":ht:" opt; do
    case "${opt}" in
        h)
            usage
            exit 0
            ;;
        t) readonly destdir="${OPTARG}" ;;
        :) die "missing argument: -${OPTARG}" ;;
        \?) die "bad option: -${OPTARG}" ;;
    esac
done
shift "$((${OPTIND} - 1))"

if ! [ 1 -eq "$#" ]; then
    die "bad args"
fi

if ! rosdep_list="$(readlink -f "$1")"; then
    die "bad path: $1"
fi
readonly rosdep_list="${rosdep_list}"

if ! [ -f "${rosdep_list}" ]; then
    die "bad file: ${rosdep_list}"
fi

if [ -n "${destdir:-}" ]; then
    info "destdir: ${destdir}"
else
    readonly destdir="${default_destdir}"
    warning "defaulting destdir: ${destdir}"
fi

readonly http_uri_list="$(mktemp -t http_uri_list.XXXXXX)"
sed -nr 's/^(gbpdistro|yaml) (http[[:graph:]]+)(.*)$/\2/gp' <"${rosdep_list}" >"${http_uri_list}"
sort -uo "${http_uri_list}" "${http_uri_list}"

while read http_uri; do
    output="${destdir}/$(filenamify "${http_uri}")"
    curl --create-dirs -fsSLo "${output}" "${http_uri}"
    sed -i "s|${http_uri}|file://${output}|g" "${rosdep_list}"
done <"${http_uri_list}"

exit "$?"
